/*
 * This file is generated by jOOQ.
 */
package studio.ikara.security.jooq.security.tables.records;


import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import studio.ikara.security.jooq.public_.enums.SecurityUserStatusCode;
import studio.ikara.security.jooq.security.tables.SecurityUsers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityUsersRecord extends UpdatableRecordImpl<SecurityUsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_users.id</code>.
     */
    public SecurityUsersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>security.security_users.user_name</code>.
     */
    public SecurityUsersRecord setUserName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.user_name</code>.
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>security.security_users.email_id</code>.
     */
    public SecurityUsersRecord setEmailId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.email_id</code>.
     */
    public String getEmailId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>security.security_users.dial_code</code>.
     */
    public SecurityUsersRecord setDialCode(Short value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.dial_code</code>.
     */
    public Short getDialCode() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>security.security_users.phone_number</code>.
     */
    public SecurityUsersRecord setPhoneNumber(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.phone_number</code>.
     */
    public String getPhoneNumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>security.security_users.first_name</code>.
     */
    public SecurityUsersRecord setFirstName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>security.security_users.last_name</code>.
     */
    public SecurityUsersRecord setLastName(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.last_name</code>.
     */
    public String getLastName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>security.security_users.middle_name</code>.
     */
    public SecurityUsersRecord setMiddleName(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.middle_name</code>.
     */
    public String getMiddleName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>security.security_users.locale_code</code>.
     */
    public SecurityUsersRecord setLocaleCode(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.locale_code</code>.
     */
    public String getLocaleCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>security.security_users.password</code>.
     */
    public SecurityUsersRecord setPassword(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.password</code>.
     */
    public String getPassword() {
        return (String) get(9);
    }

    /**
     * Setter for <code>security.security_users.password_hashed</code>.
     */
    public SecurityUsersRecord setPasswordHashed(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.password_hashed</code>.
     */
    public Boolean getPasswordHashed() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>security.security_users.user_status_code</code>.
     */
    public SecurityUsersRecord setUserStatusCode(SecurityUserStatusCode value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.user_status_code</code>.
     */
    public SecurityUserStatusCode getUserStatusCode() {
        return (SecurityUserStatusCode) get(11);
    }

    /**
     * Setter for <code>security.security_users.no_failed_attempt</code>.
     */
    public SecurityUsersRecord setNoFailedAttempt(Short value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.no_failed_attempt</code>.
     */
    public Short getNoFailedAttempt() {
        return (Short) get(12);
    }

    /**
     * Setter for <code>security.security_users.created_at</code>.
     */
    public SecurityUsersRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>security.security_users.updated_at</code>.
     */
    public SecurityUsersRecord setUpdatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>security.security_users.created_by</code>.
     */
    public SecurityUsersRecord setCreatedBy(Long value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.created_by</code>.
     */
    public Long getCreatedBy() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>security.security_users.updated_by</code>.
     */
    public SecurityUsersRecord setUpdatedBy(Long value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>security.security_users.updated_by</code>.
     */
    public Long getUpdatedBy() {
        return (Long) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityUsersRecord
     */
    public SecurityUsersRecord() {
        super(SecurityUsers.SECURITY_USERS);
    }

    /**
     * Create a detached, initialised SecurityUsersRecord
     */
    public SecurityUsersRecord(Long id, String userName, String emailId, Short dialCode, String phoneNumber, String firstName, String lastName, String middleName, String localeCode, String password, Boolean passwordHashed, SecurityUserStatusCode userStatusCode, Short noFailedAttempt, LocalDateTime createdAt, LocalDateTime updatedAt, Long createdBy, Long updatedBy) {
        super(SecurityUsers.SECURITY_USERS);

        setId(id);
        setUserName(userName);
        setEmailId(emailId);
        setDialCode(dialCode);
        setPhoneNumber(phoneNumber);
        setFirstName(firstName);
        setLastName(lastName);
        setMiddleName(middleName);
        setLocaleCode(localeCode);
        setPassword(password);
        setPasswordHashed(passwordHashed);
        setUserStatusCode(userStatusCode);
        setNoFailedAttempt(noFailedAttempt);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setCreatedBy(createdBy);
        setUpdatedBy(updatedBy);
        resetTouchedOnNotNull();
    }
}
